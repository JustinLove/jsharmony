/*
Copyright 2017 apHarmony

This file is part of jsHarmony.

jsHarmony is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jsHarmony is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this package.  If not, see <http://www.gnu.org/licenses/>.
*/

// Canonical Example
{
  "layout": "grid", //grid, form, form-m, multisel, exec
  "inherits": "C_CA", //Inherit from another form
  "table": "V_E001L",
  "caption": [ "", "Client", "Clients" ],
  "title": "CLIENT - @C_Name - STRD", //Can use dynamic parameters from jshconfig.globalparams: @C_Name, or <#=data.C_Name#> for form data, or <#=bcrumbs.PL_YEAR_TXT#> for breadcrumb SQL data, <#=_GET.TO_ID#> for GET Parameters
  "topmenu": "clients",
  "access": "B", //B,BI,BIU,BD,BID,BIUD
  "roles": { "CLIENT": "*", "C_ADMIN": "B" }, //By default, only SYSADMIN & DEV have access
  "scope": "*", //Scope is not used
  "popup": [ 1000, 900 ],
  "sort": [ "^E_Name asc", "^C_Name" ], //^ = Ascending or v = Descending
  //Alternate Syntax
  "sort": [ {"E_Name": "asc"}, {"C_Name": "desc"} ],
  "samplerepeat": 5,
  "rowlimit": 5, //Maximum rows returned per iteration in GridView
  "querystring": { "&action": "edit", "|C_ID": "@C_ID" }, //QueryString Defaults/Overrides = &Override, |Default
  "breadcrumbs":{
    "parents": ["QC_DBDW","CCL","<a href='PLRNDW?action=edit&PL_ID=<#=bcrumbs.PL_ID#>&tabs=%7B&quot;PLRNDW&quot;%3A&quot;PLRL&quot;%7D'>RND - <#=bcrumbs.PL_YEAR_TXT#> - <#=bcrumbs.PL_TYPE_TXT#></a>"], //Simple Breadcrumbs, array of parents.  Can also use HTML and Dynamic JS
    "title": "Client", //Title Override for Breadcrumbs, can use <#=bcrumbs.PL_YEAR_TXT#> for breadcrumb SQL data
    "sql": "select PL_ID,PL_YEAR_TXT,PL_TYPE_TXT from V_PLL where PL_ID=isnull(@PL_ID,(select PL_ID from PLR where PLR_ID=@PLR_ID))",
    "sql_params":["C_ID","T_ID"]
  },
  "helpid": "CL",
  "js": "function(){}", //Custom JS to be included client-side.  Concatenated with model.js
  "ejs": "HTML CONTENT", //Custom EJS to be included client-side.  Concatenated with model.ejs
  "tabpos": "top", //top,bottm
  //"curtab":1, //VIRTUAL PROPERTY, DO NOT OVERWRITE
  //sqlselect, sqldownloadselect, sqlinsertencrypt, sqlupdate, sqldelete, sqlrowcount
  "sqlinsert":"insert into %%%TABLE%%%(%%%FIELDS%%%) values(%%%VALUES%%%);select scope_identity() as CHG_ID;",
  "sqlexec": "exec dbo.PLE_NOTIF @C_ID,@MDate", //Used by EXEC.  Be sure to add %%%DATALOCKS%%% if applicable
  "sqltype": "multirecordset", //recordset, multirecordset  Used by EXEC.
  "sqlwhere": "C_STS='ACTIVE'", //Additional filter for grid
  //onload(xform,callback) - Returns false to not bubble (Executed once all selects are complete, on every reselect.  Callback pulls execution away from main thread, return false, and reset links on completion,
  //onloadimmediate(xform) - Runs immediately once select is complete, instead of when all selects are complete for all subforms
  //oninit(xform) (Executed when form is first loaded)
  //oninsert(xform,urlkeys,url) (FORM ONLY) Returns false to not bubble - Executed after insert operation is completed
  //onvalidate(xform, callback) - Must return callback(true) if validation succeeded and handle errors
  //onupdate (FORM ONLY)
  //ondestroy
  //oncommit(xform, rowid, callback) (GRID ONLY) - Executes after db Update / Insert / Delete.
  //onloadstate(xform, state)
  //onrowbind(xform,jobj,datarow) (GRID ONLY)
  //onroute (routetype ('onepage'), req, res, f, require, jsh, modelid, params) - Server-side reroute to different page if necessary, called before any ent data loaded - TOW
  //    routetypes: onepage, model, d, d_transaction, csv, report, d_report, d_report_html, d_reportjob
  //    params = { query: {...}, post: {...} }
  "nokey": 1, //No primary key - only browse
  "unbound": 1, //Disable any AppSrv operations
  "tabs": {
    "General": { "caption":"General Info", "target": "C", "bindings": { "C_ID": "C_ID" }, "showcode": ["VIEW","EDIT"] }
  },
  "tabcode": "A_TYPE", //The column used as a basis for "showcode" - hiding or showing tabs.  Must be defined as a parameter
  "bindings": {"J_ID":"J_ID"}, //Additional bindings for top-level forms
  "tabpanelstyle": "min-width:900px;",
  "tablestyle": "min-width:700px;",
  "formstyle": "min-width:900px;",
  "inlinepopup": 1, //Used internally by program for popuplov child grid
  "codeval": "J_ID", //Used internally by program for popuplov child grid
  "disableautoload": 1, //Disables autoload in grid on scroll to bottom
  "buttons": [
    { "link": "add:H", "icon": "add", "text": "Add %%%CAPTION%%%", "access": "I", "bindings": { "N_SCOPE_ID": "N_SCOPE_ID", "N_SCOPE": "'C'", "C_ID":  "N_SCOPE_ID", "N_TYPE":  "'C'" }, "style": "", "class": "", "roles": { "CLIENT": "*", "C_ADMIN": "B" }, "nl": 1 }, //or just put the link for add
    {"link":"js:C_LOVBAR_Add(this,xformid);", "icon": "add", "text": "Add Customer", "access": "B" },
    {"link": "savenew:", "icon": "add", "text": "Save and New", "access": "IU" }
    {"link": "savenew:", "icon": "add", "text": "Save and New", "access": "IU", "group":"Actions" }
    //Buttons without I access will not show up on Insert
    //"link":"js:XExt.popupReport('I',{ C_ID: 97 },{ width:900, height:500 });"
  ],
  "hide_system_buttons" : ["print","export","help","filter"], //Current only on Grid
  "rowstyle": "<#=xejs.iif(1==1,'color:red;','color:yellow;')#>", //Used in grid to style rows dynamically
  "rowclass": "<#-xejs.case(datarow['PLE_SEL_NOTIF'],'xgrid_row_highlight',!datarow['PLE_SEL_NOTIF_OK'],'xgrid_row_disabled')#>", //Used in grid to style rows dynamically
    //xejs.iif(condition,true,[false])  [false] result is optional
    //xejs.case(condition1,result1,condition2,result2,[catchall_result])
  "reselectafteredit": "row",    "comment1":"row, or blank",
  "newrowposition": "last",      "comment2":"first or last",
  "commitlevel": "row",          "comment3":"cell, row, page, or none",
  "validationlevel": "cell",     "comment4":"cell, or row",
  "nogridadd": 1,
  "noresultsmessage":  "No results found %%%FORSEARCHPHRASE%%%",
  "grid_expand_filter": 1,
  "grid_rowcount":  1,
  "grid_require_filter": 1, //Do not initially load results
  "grid_save_before_update": 1,
  "duplicate": {"target": "E_DUPLICATE", "bindings": {"E_ID":"E_ID", "C_ID": "C_ID"},"link":"edit:EW&E_ID=NEW_E_ID","link_text": "Duplicate Item"},
  "fields": [
    {
      "name": "E_Name",
      "type": "varchar", //bigint, varchar, date, decimal, int, datetime, char, smallint, file, hash, encascii, time, bit
      "length": "255",
      "precision": [12,6], //For decimal, default is 10,4 if omitted
      "key": 1, //If key exists, then this is a key field
      "lovkey": 1, //Used by Multisel to enable additional foreign key in LOV expression, without being a required parameter
      "virtual": 1, //Field is not bound on I/U, can be B, but will not pull updates or respond to HasUpdates
      "static": "js:XExt.UndefinedBlank(_GET['J_ID'])", //Static binding, overwrite existing data from form
      "unbound": 1, //Field is completely unbound, not added to Fields array
      "sqlselect": "@BXBUY_ID", //Override select sql for this field on Grid select
      "sqlupdate": "@BXBUY_ID+5",
      "sqlwhere": "x like @E_Name", //Custom where express for "F" fields in Grid
      "caption": "Employee",
      "caption_ext":  "Employee Name", //Optional longer caption for Filter & Validation
      "captionstyle": "font-size:12px;",
      "captionclass": "classname",
      "hidden": 1, //**Deprecated**, use "control":"hidden"
      "access": "B", //BIUD, or F for foreign key, S for Grid Filter/Search in addition to any B.  html and button controls auto-add "B" rights. **C - crumbparameter deprecated**
      "datalock": { "C_ID": "client_C_ID" }, //Link DataLock ID to query in _config.datalocks.
      "control": "label", //label,html(value),textbox,textzoom,dropdown,date,textarea,subform,html,hidden,password,file_upload,button,linkbutton,tree,checkbox
      "controlparams": { "dateformat": "mm/dd/y" }, //DatePicker Params - dateformat is parameter to jQuery datepicker control for date display
                       {"sqlparams": {"FILE_SIZE": "D_SIZE",  //file_upload params - File Size
                             "FILE_EXT": "D_EXT", //File Extension
                             "FILE_UTSTMP": "D_UTstmp", //Upload Timestamp - will be combined with app.jshconfig.sqlparams.TSTMP sql
                             "FILE_UU": "D_UU", //Upload User - will be combined with app.jshconfig.sqlparams.CUSER sql
                             "FILE_NAME": "D_FileName" //Target file name for download
                           },
                           "image": {
                             "crop": [800,600], //Use either crop or resize
                             "resize": [800,600],
                             "resize": [225,75,{ "upsize": true, "extend":  true }], //upsize = increase size if smaller, extend = increase size to max, center content
                             "format": "jpg", //jpg or png
                           },
                           "thumbnails": {
                             "D_Medium": { //Key = file name
                               "crop": [800,600], //Use either crop or resize
                               "resize": [800,600],
                               "resize": [225,75,{ "upsize": true, "extend":  true }],
                               "format": "jpg", //jpg or png
                             } 
                           },
                           "download_button": "Download Document", //Text for download button
                           "preview_button": "View Image", //Text for preview button - opens within new browser window
                           "upload_button": "Upload New File", //Text for upload button
                           "delete_button": "Delete File", //Text for delete button
                           "data_folder": "D"}, //Folder for files, must be unique per model
                      {"item_context_menu": [ //tree params - Context Menu for an Item
                        { "icon": "add", "text": "Add", "action": "XExt.Alert('add' + context_item);", "access": "IUD" }
                        ],
                       "expand_all": false, //Show nodes expanded by default
                       "expand_to_selected": true
                      },
                      {"value_true":"ON",   //checkbox params
                       "value_false":"OFF",
                       "value_hidden":""
                      },
                      { //**Deprecated** - moved to field.popuplov
                       "codeval": "J_ID", //**Deprecated**
                       "popupstyle": "height:200px;", //**Deprecated**
                       "popup_copy_results": { "C_NAME": "C_NAME" }, //**Deprecated**
                       "base_readonly":  1, //**Deprecated**
                       "onpopup" //**Deprecated**
                      },
      "controlstyle": "font-size:12px;",
      "controlclass": "classname",
      "onchange": "console.log(JSON.stringify(obj));console.log(newval);XExt.Alert('test');",//Javascript Event Handler for onchange event
      //onchange(obj,newval,e)
      "password": "E_SSN", // For type=encascii
      "salt": "E_SSNHASH", // For type=hash
      "roles": {"CX_X": ""}, //"" to remove access, * for all access, else BIUD
      "format": "phone", //"phone", or ["date","MM/DD/YY HH:mm"], or ["decimal","2"], or ["decimalext","2"] (Decimal that doesn't round up, only adds zeros, up to 20 decimal places), or "ssn", or ["time":"h:mm A"], or ["time":"HH:mm"]  //Date uses Moment.js
      "validate": [ "Required", "MaxLength:5", "MinLength:5", "IsNumeric", "IsNumeric:true" (Only positive), "IsDecimal", "IsDecimal:3" (3 decimal places), "MaxValue:999", "MinValue:100", "RegEx:'/regex/','be a correct value.'", "IsEmail", "IsDate", "IsSSN" ],
      // File can be , ["Required", "MaxSize:5000000" (bytes), "Extension:['.PDF','.JPEG']"]
      "style": "font-size:20px;",
      "sample": "John Smith",
      "value": "John Smith",
      "link": "edit:CW", //for grid, "add:", "select"...also added tab syntax: "edit:JW&tabs={\"JW\":\"J_QUICK\"}"
      //LOV sql_params must be defined as fields, and must be in the request QueryString
      "lov": { 
        "sql": "select HP_CODE as CODEVal,HP_Desc as CODETxt from HP order by HP_Desc", 
        "datalock":{"C_ID":"client_C_ID"}, 
        "sql_params":["C_ID","T_ID"],
        "sqlselect": "select HP_Desc from HP where HP_CODE=XXXXXXXXXXXXXXXXXXXX"
      }, //codeval = Value, codetxt = Desc    "nodatalock":["C_ID"] (If applicable)
      "lov": { "sql": "select fcert_id as CODEID,fcert_parent_id as CODEParentID,fcert_id as CODEVal,fcert_name as CODETxt,'folder' as CODEIcon from fcert where C_ID=(select C_ID from E where E_ID=@E_ID) order by fcert_parent_id, fcert_name, fcert_id", "sql_params":["E_ID"] }, //For Tree Control
      "lov": { "sql2": "select X_ID as CODEParent, HP_CODE as CODEVal,HP_Desc as CODETxt from HP order by HP_Desc","parent": "CA_COUNTRY", "datalock":{"C_ID":"client_C_ID"} }, //CODEParent = Parent Value, CODEVal = Value, CODETxt = Desc
      "lov": { "sqlmp": "select X_ID as CODEParent1, Y_ID as CODEParent2, HP_CODE as CODEVal,HP_Desc as CODETxt from HP order by HP_Desc","parents": ["CA_COUNTRY","OTHER"], "datalock":{"C_ID":"client_C_ID"} }, //CODEParent[#] = Parent Value, CODEVal = Value, CODETxt = Desc
      "lov": { "UCOD": "E_STS" },
      "lov": { "UCOD2": "DSCOPE_DCTGR","blank": 1,"parent": "CA_COUNTRY" }, //Alternatively, blank can be set to text: "blank":"(None)" otherwise defaults to "Please Select..."
      "lov": { "GCOD": "E_CTGR", "showcode": 1 }, //showcode ignores the CODETxt and shows the CODEVal on the front-end.  Useful for States
      "lov": { "GCOD2": "DSCOPE_DCTGR","blank": 1,"parent": "CA_COUNTRY" },
      "eol": 1,
      "popuplov": {  //Enable POPUPLOV, requires target
                       "target":  "J",
                       "codeval": "J_ID",
                       "popupstyle": "height:200px;",
                       "popup_copy_results": { "C_NAME": "C_NAME" },
                       "base_readonly":  1,
                       "onpopup": "console.log('popup');", //(popupmodelid, parentmodelid, fieldid, onComplete)
                       "popupiconstyle": "display:none;",
                      },
      "default": "js:moment().format()", // or just "USA" for literals, or { "sql": "select C_Name from C where C_ID=@C_ID", "sql_params": ["C_ID"] }
      "readonly": 1,
      //for subform, popuplov
      "target": "E_Name",
      "bindings": { "C_ID": "C_ID" },
      "cellclass": "", //For Grid / Multisel table
      "cellstyle": "width:300px;"  //For Grid / Multisel table
      "html": "<a href='/<#=data[j]['C_ID']#>'><#=data[j]['C_Name']#></a>" //**Deprecated**, used "control":"html"
      "serverejs": 1, //Evaluate EJS server-side (for HTML)
      "disable_sort": 1, //Only applies to grid
      "disable_search": 1, //Only applies to grid, do not display as a filter column
      "disable_search_all": 1, //Only applies to grid, do not query in "Any" filter search
      "sql_sort": "(case when X then 1 else 0 end)", //Only applies to grid
      "sql_search": "(case when X then 1 else 0 end)", //Only applies to grid
      "sql_search_sound": "C_ID in (select C_ID from SDX where SDX_COL='CN' and SDX_VAL=SOUNDEX(%%%FIELD%%%))",
      "__REMOVEFIELD__":1 //Remove Model field in inherited child
    }
  ],
  "dberrors": [
    [ "UNQ_H_H_UNIQUE", "This Help Panel has already been defined." ],
    [ "/UNQ_H_H_[UN]*IQUE/", "This Help Panel has already been defined." ]
    //If error begins with "Application Error - " we will only show the error message, and also ignore any other error messages in that transaction
  ],
  //Auto-generated
  "_inherits": ["CL_X","CL"] //Array of parent models
  "_basemodel": "CL" //Base parent model
}