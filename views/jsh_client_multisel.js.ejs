/*
Copyright 2017 apHarmony

This file is part of jsHarmony.

jsHarmony is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jsHarmony is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this package.  If not, see <http://www.gnu.org/licenses/>.
*/
<% if(model.sample_data) return; %>

<%  
var lovfield = '';
for(var i=0;i<model.fields.length;i++){ 
  var field = model.fields[i];
  if('lov' in field){ 
    if(lovfield != '') throw new Error('Can only have one LOV per Multisel.');
    lovfield = field.name; 
  }
}
if(lovfield == '') throw new Error('Multisel requires one LOV.');
%>

var xform_<%=model.id%>;

function XForm<%=model.id%>_Init(callback){
  xform_<%=model.id%> = new XData('<%=model.id%>');
  xform_<%=model.id%>.HasUpdates = function(){ return false; };
  xform_<%=model.id%>.Data = {};
  xform_<%=model.id%>.PlaceholderID = '#xmultisel_<%=model.id%>_placeholder';
  xform_<%=model.id%>.TemplateID = '#xmultisel_<%=model.id%>_template';

  xform_<%=model.id%>.Select = function(onComplete){
    var execparams = {};
    if(!is_add){
      _.each(XForms['<%=model.id%>']._bindings,function(binding){
        var bfield = XForm<%=model.id%>.prototype.Fields[binding];
        if((typeof bfield != 'undefined') && (XExt.HasAccess(bfield.access,'F'))){
          execparams[binding] = XForms['<%=model.id%>'][binding]();
        }
      });
    }
    else{
      _.each(XForms['<%=model.id%>']._bindings,function(binding){
        var bfield = XForm<%=model.id%>.prototype.Fields[binding];
        if((typeof bfield != 'undefined') && (bfield.lovkey)){
          execparams[binding] = XForms['<%=model.id%>'][binding]();
        }
      });
    }
    xLoader.StartLoading(xform_<%=model.id%>);
    var _query = '';
    if(!_.isEmpty(execparams)) _query = '?'+$.param(execparams);
    $.ajax({
      type:"GET",
      url:_BASEURL+'_d/'+xform_<%=model.id%>.q+'/'+_query,
      dataType: 'json',
      success:function(data){
        if((data instanceof Object) && ('_error' in data)){
          if(DefaultErrorHandler(data['_error'].Number,data['_error'].Message)) { }
          else if(data._error.Number == -9){ XExt.Alert(data._error.Message); }
          else { XExt.Alert('Error #'+data._error.Number+': '+data._error.Message); }
        }
        else{
          var ejssource = $(xform_<%=model.id%>.TemplateID).html();
          ejssource = ejssource.replace(/<#/g,'<'+'%').replace(/#>/g,'%'+'>')
          var ejsrslt = ejs.render(ejssource,{
            data:data[xform_<%=model.id%>.q]
          });
          $(xform_<%=model.id%>.PlaceholderID).empty();
          $(xform_<%=model.id%>.PlaceholderID).append(ejsrslt);
        }
        xLoader.StopLoading(xform_<%=model.id%>);
        if(onComplete) onComplete();
      }
    });
  };

  callback();
}

function XForm<%=model.id%>_Save(){
  var selected_values = [];
  $(xform_<%=model.id%>.PlaceholderID+' input.xselitem').each(function(i,obj){
    if($(obj).is(':checked')){
      selected_values.push($(obj).val());
    }
  });
  var _query = {};
  _.each(XForms['<%=model.id%>']._bindings,function(binding){
    var bfield = XForm<%=model.id%>.prototype.Fields[binding];
    if((typeof bfield != 'undefined') && !(XExt.HasAccess(bfield.access,'F'))) return;
    _query[binding] = XForms['<%=model.id%>'][binding]();
    if(is_add && (typeof  _query[binding] == 'undefined')){
      _query[binding] = '%%%'+binding+'%%%';
    }
  });
  var rslt = { 
    'method':'post',
    'model':xform_<%=model.id%>.q,
    'query':_query,
    'post':{'<%=lovfield%>':JSON.stringify(selected_values)},
    'onComplete':undefined
  };
  return [rslt];
}

jsh_heap.push('xform_<%=model.id%>');

jsh_heap.push('XForm<%=model.id%>_Init');
jsh_heap.push('XForm<%=model.id%>_Save');

<%-jshRenderEJS('jsh_multisel.js.datamodel',ejsparams)%>