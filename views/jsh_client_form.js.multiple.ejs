/*
Copyright 2017 apHarmony

This file is part of jsHarmony.

jsHarmony is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jsHarmony is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this package.  If not, see <http://www.gnu.org/licenses/>.
*/

(function(jsh){
  var _ = jsh._;
  var $ = jsh.$;
  var XExt = jsh.XExt;

  jsh.App.XForm<%=model.id%>_Init = function(callback){
    var xform_<%=model.id%> = jsh.App.xform_<%=model.id%> = new jsh.XPost('<%=model.id%>','','');
    xform_<%=model.id%>.Data = new jsh.App.XForm<%=model.id%>();
    xform_<%=model.id%>.DataType = jsh.App.XForm<%=model.id%>;
    xform_<%=model.id%>.GetSelectParams = function(){
      var rslt = new Object();
      if(!jsh.is_add){
        _.each(jsh.XForms['<%=model.id%>']._bindings,function(binding){
          rslt[binding] = jsh.XForms['<%=model.id%>'][binding]();
        });
      }
      else{
        rslt._action = 'add';
      }
      return rslt; 
    };
    xform_<%=model.id%>.GetKeys = function(){
      var rslt = new Object();
      if(!jsh.is_add){
        <% xejs.eachKey(model.fields,function(field){  if(!field.name) return; %>rslt.<%=field['name']%> = this.Data.<%=field['name']%>;<%}); %>
      }
      else{
        _.each(jsh.XForms['<%=model.id%>']._bindings,function(binding){
          rslt[binding] = '%%%'+binding+'%%%';
        });
      }
      return rslt; 
    };
    
    //Pull keys from parent
    //Get recordset
    
    jsh.$root('.xelem<%=model.id%>').keyup(function(){ if(jsh.is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this);; });
    jsh.$root('.xelem<%=model.id%>.dropdown').change(function(){ if(jsh.is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this); });
    jsh.$root('.xelem<%=model.id%>.checkbox').change(function(){ if(jsh.is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this); });

    <% _.each(model.fields,function(field){ if(!('control' in field) || !field.name) return; if(field.control=='date') {%>
    jsh.$root(".<%=field.name%>.xelem<%=model.id%>").datepicker({ changeMonth: true, changeYear: true, dateFormat: ('<%=(field.controlparams?field.controlparams.dateformat:'')%>'||jsh.DEFAULT_DATEFORMAT), onSelect: function(){ if(jsh.is_add) return; xform_<%=model.id%>.Data.OnControlUpdate(this); } });
    <% } }); %>  
    callback();
  }

  jsh.App.XForm<%=model.id%>_Save = function(){
    return jsh.App.xform_<%=model.id%>.PrepSaveDataSet();
  }

  jsh.App.XForm<%=model.id%>_Delete = function(){
    var is_new =  jsh.XForms['<%=model.id%>']._is_new;
    if(!is_new){
      XExt.Confirm("Are you sure you want to delete this <%=model.caption[1]%>?",function(){
        jsh.App.xform_<%=model.id%>.Delete.call(jsh.App.xform_<%=model.id%>,function(rslt){
          XExt.Alert('Done');
        });
      });
    }
    //Redirect away
  }

})(<%-instance%>);