/*
Copyright 2017 apHarmony

This file is part of jsHarmony.

jsHarmony is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

jsHarmony is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this package.  If not, see <http://www.gnu.org/licenses/>.
*/

function XForm<%=model.id%>_Init(callback){
	xform_<%=model.id%> = new XPost('<%=model.id%>','','');
	xform_<%=model.id%>.Data = new XForm<%=model.id%>();
	xform_<%=model.id%>.DataType = XForm<%=model.id%>;
	xform_<%=model.id%>.GetSelectParams = function(){
	  var rslt = new Object();
    if(!is_add){
      _.each(XForms['<%=model.id%>']._bindings,function(binding){
        rslt[binding] = XForms['<%=model.id%>'][binding]();
      });
    }
    else{
    	rslt._action = 'add';
    }
    return rslt; 
  };
	xform_<%=model.id%>.GetKeys = function(){
    var rslt = new Object();
    if(!is_add){
	  	<% xejs.eachKey(model.fields,function(field){%>rslt.<%=field['name']%> = this.Data.<%=field['name']%>;<%}); %>
    }
    else{
      _.each(XForms['<%=model.id%>']._bindings,function(binding){
        rslt[binding] = '%%%'+binding+'%%%';
      });
    }
    return rslt; 
  };
  
  //Pull keys from parent
  //Get recordset
  
  $('.xelem<%=model.id%>').keyup(function(){ if(is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this);; });
  $('.xelem<%=model.id%>.dropdown').change(function(){ if(is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this); });
  $('.xelem<%=model.id%>.checkbox').change(function(){ if(is_add) return; if(!$(this).hasClass('editable')) return; xform_<%=model.id%>.Data.OnControlUpdate(this); });

  <% _.each(model.fields,function(field){ if(!('control' in field) || !field.name) return; if(field.control=='date') {%>
  $("#<%=field.name%>.xelem<%=model.id%>").datepicker({ changeMonth: true, changeYear: true, dateFormat: '<%=(field.controlparams?field.controlparams.dateformat:'')%>', onSelect: function(){ if(is_add) return; xform_<%=model.id%>.Data.OnControlUpdate(this); } });
  <% } }); %>  
  callback();
}
function XForm<%=model.id%>_Save(){
  return xform_<%=model.id%>.PrepSaveDataSet();
}
function XForm<%=model.id%>_Delete(){
  var is_new =  XForms['<%=model.id%>']._is_new;
	if(!is_new){
	  XExt.Confirm("Are you sure you want to delete this <%=model.caption[1]%>?",function(){
	    xform_<%=model.id%>.Delete.call(xform_<%=model.id%>,function(rslt){
	      XExt.Alert('Done');
	    });
	  });
  }
  //Redirect away
}

jsh_heap.push('XForm<%=model.id%>_Init');
jsh_heap.push('XForm<%=model.id%>_Save');
jsh_heap.push('XForm<%=model.id%>_Delete');